lb - create an application 
lb model- creating a model
lb datasource- datasource connection
lb relation- to add the relations between models

solve AUTHORIZATION ERROR by disabling the  //server.enableAuth(); and runing the apis.

the customer model can act as user model and thus can be used for login and logout with additional properties by adding the following: 
"options": {
    "base": "User",

resolve the terminal error by pasting the error in google and get the answer from stackoverflow or github

sign in and register by using POST method

remote methods are used for the REST Endpoints and these are the apis that are been called

for  mongodb connection add: 
//model-config.json
"AccessToken": {
    "dataSource": "order",
    "public": false
  },
  "ACL": {
    "dataSource": "order",
    "public": false
  },
  "RoleMapping": {
    "dataSource": "order",
    "public": false,
    "options": {
      "strictObjectIDCoercion": true
    }
  },
  "Role": {
    "dataSource": "order",
    "public": false
  },
  "Customer": {
    "dataSource": "order",
    "public": true
  },
  "Order": {
    "dataSource": "order",
    "public": true
  },
  "User": {
    "dataSource": "order",
    "public": false
  }

  Steps:
  Register by POST in customer > login > GET customers/ getCustomerByName > get CustomerById > logout

 Place order by POST in order > get orders by GET and Order status by /status api

  "name": "order" //datasource.json --- name of the mongodb datasource that all models will use.

For validation :
Customer.validatesUniquenessOf('email', {message: 'email is not unique'});

To see the data in console for any api execute:
Customer.login = function(data,callback){

  	console.log(data); // see data in console that are passed by the apis		
  }

  **The best way to get an answer is to find it yourself**

  Keep on rectifing an error, deriving solution and obtaining results

Stack over flow is more helpful than loopback documentation 

User": {
    "dataSource": "order",  // to make the predefined user invisible
    "public": false

 "emailVerified": "boolean" // for email verification which is set to false Bydefault
 
 Issue for 0 as a response code: // no response from server:
 problem in datasource which can be solved by adding user in base (paste the error in google)

 The api starts from server>server.js

 






